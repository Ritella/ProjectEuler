# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over
# five hundred divisors?

i = 1
tri_num_last = i
while True:
    i += 1
    tri_num_last += i
    all_ints = range(1, tri_num_last + 1)
    factors = [int(tri_num_last % x == 0) for x in all_ints]
    print(sum(factors))
    if sum(factors) > 500:
        break

print(tri_nums[-1])


# Notes
# must use append
# must convert range to a list
# must convert bool factors to int
# can't convert list bool to list int; have to do this item-wise
